name: CI Django & Postgres Tests

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  pull_request:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel

  push:
    branches: [ "main" ]
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    services:
      postgres_main:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: djtesting
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v4.1.0
        with:
          python-version: '3.10'

      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Run Tests
        env:
          DEBUG: False
          SECRET_KEY: CI_CD_TEST_KEY
          ALLOWED_HOSTS: localhost:8000
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          DATABASE_DB: djtesting
          DATABASE_PORT: 5432
          DATABASE_HOST: localhost
          cloud_name : dny99bi987oie
          api_secret : LY_OSICOw676kySqISL2UO2auU
          api_key: 793427527149657
          EMAIL_HOST: smtp.gmail.com
          EMAIL_HOST_USER: youremail@gmail.com
          EMAIL_HOST_PASSWORD: yourpassword  
          EMAIL_PORT: 587  
          GITHUB_CLIENT_ID: 9768d8871b09d781b95a
          GITHUB_SECRET: 29f8ecd629c79aa4c3a875ba6943366d8238d9c4
          SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: 701550052188-eid7v46tt1iauuis8uh2kldetaugjo.apps.googleusercontent.com
          SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET: GORSPX-7V2AxuZMuTdLRKgXMwowO7mOYGpg    
          SOCIAL_AUTH_FACEBOOK_KEY: 985292215170699  
          SOCIAL_AUTH_FACEBOOK_SECRET: 7b8483ff422109a7c17b3f7a03966bbf
          CELERY_BROKER_URL: redis://your-rediscloud-url:your-rediscloud-port/0
          CELERY_RESULT_BACKEND: redis://your-rediscloud-url:your-rediscloud-port/0
          
        run: |
          python manage.py migrate
          python manage.py test
